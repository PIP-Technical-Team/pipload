[{"path":"https://pip-technical-team.github.io/pipload/articles/global-variables.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Global variables","text":"PIP project makes use many directory paths ad-hoc information gathered endogenously PIP project. Since pipload package charge accessing loading data PIP, also charge loading memery ad-hoc variables used across PIP.","code":""},{"path":"https://pip-technical-team.github.io/pipload/articles/global-variables.html","id":"functions","dir":"Articles","previous_headings":"","what":"Functions","title":"Global variables","text":"two main functions pip_create_globals() add_gls_to_env(). former main function creates variables returns list. latter convenient function standardize use global variables across PIP processes.","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/articles/global-variables.html","id":"basics","dir":"Articles","previous_headings":"Create globals","what":"Basics","title":"Global variables","text":"pip_create_globals() makes use three arguments work together: root_dir, out_dir, vintage. root_dir refers directory path PIP data resides. Since directory path PIP data made publicly available, stored environment variable PIP_ROOT_DIR, hosted privately PIP Technical Team. sake sake demostrations, let’s use temporal directory root directory. default behavior pip_create_globals() create whole directory structure case exist: addition create global vartiables, pip_create_globals() creates two main folders case don’t exist, PIP-Data_QA pip_ingestion_pipeline. useful user want work main PIP data folder structure. Let’s focus now pc_data sub-directory inside pip_ingestion_pipeline. folder two folders, cache output. Within latter see vintage folder 20220314 form \"%Y%m%d\". Since default input output data stored within structure root_dir directory, value out_dir root_dir. Yet, user can specify different directory path store output PIP pipeline. case , folder fake_dir2 represents root_dir fake_dir3 output directory, out_dir. can see folder pip_ingestion_pipeline available fake_dir2 fake_dir3, output created fake_dir3 fake_dir2. mean reality fake_dir2 contain output folder, given working temporal directories, output folder exist either .","code":"fake_dir1 <- paste0(tempdir(), \"/1\") Sys.setenv(PIP_ROOT_DIR = fake_dir1) gls <- pip_create_globals() fs::dir_tree(fake_dir1, type = \"directory\") #> /tmp/RtmpzynBs8/1 #> ├── DLW-RAW #> ├── PIP-Data_QA #> └── pip_ingestion_pipeline #>     ├── pc_data #>     │   ├── cache #>     │   │   └── clean_survey_data #>     │   └── output #>     │       └── 20220314 #>     │           ├── _aux #>     │           ├── estimations #>     │           └── survey_data #>     └── tb_data #>         ├── arrow #>         ├── cache #>         │   └── clean_survey_data #>         └── output #>             └── 20220314 #>                 └── estimations fake_dir2 <- paste0(tempdir(), \"/2\") fake_dir3 <- paste0(tempdir(), \"/3\") Sys.setenv(PIP_ROOT_DIR = fake_dir2) gls <- pip_create_globals(out_dir = fake_dir3) fs::dir_tree(fake_dir2, type = \"directory\") #> /tmp/RtmpzynBs8/2 #> ├── DLW-RAW #> ├── PIP-Data_QA #> └── pip_ingestion_pipeline #>     ├── pc_data #>     │   └── cache #>     │       └── clean_survey_data #>     └── tb_data #>         ├── arrow #>         └── cache #>             └── clean_survey_data fs::dir_tree(fake_dir3, type = \"directory\") #> /tmp/RtmpzynBs8/3 #> └── pip_ingestion_pipeline #>     ├── pc_data #>     │   └── output #>     │       └── 20220314 #>     │           ├── _aux #>     │           ├── estimations #>     │           └── survey_data #>     └── tb_data #>         └── output #>             └── 20220314 #>                 └── estimations"},{"path":"https://pip-technical-team.github.io/pipload/articles/global-variables.html","id":"vintages","dir":"Articles","previous_headings":"Create globals","what":"Vintages","title":"Global variables","text":"option vintage comes play. argument refers name sub-directories inside output folder. can take two special values, “latest” “new”, character. “latest” (default), recent version available vintage directory form “%Y%m%d” used. folder exists form, new folder date execution created. “new”, new folder name form “%Y%m%d” created. names coerced lower cases. , let’s pretend , inside official directory, fake_dir1, recent vintage output sub-directories 20220314 .Yet, don’t want mess , want create new vintage, “temp_out”, also want directory different official one, fake_dir2. , can something like . can see, directory temp_out created inside output fake_dir2 directory.","code":"Sys.setenv(PIP_ROOT_DIR = fake_dir2) gls <- pip_create_globals(root_dir = fake_dir1,                            out_dir  = fake_dir2,                            vintage  = \"temp_out\") #> ℹ Alternative root directory for root_dir is set to <\/tmp/RtmpzynBs8/1> fs::dir_tree(fake_dir1, type = \"directory\") #> /tmp/RtmpzynBs8/1 #> ├── DLW-RAW #> ├── PIP-Data_QA #> └── pip_ingestion_pipeline #>     ├── pc_data #>     │   ├── cache #>     │   │   └── clean_survey_data #>     │   └── output #>     │       └── 20220314 #>     │           ├── _aux #>     │           ├── estimations #>     │           └── survey_data #>     └── tb_data #>         ├── arrow #>         ├── cache #>         │   └── clean_survey_data #>         └── output #>             └── 20220314 #>                 └── estimations fs::dir_tree(fake_dir2, type = \"directory\") #> /tmp/RtmpzynBs8/2 #> ├── DLW-RAW #> ├── PIP-Data_QA #> └── pip_ingestion_pipeline #>     ├── pc_data #>     │   ├── cache #>     │   │   └── clean_survey_data #>     │   └── output #>     │       └── temp_out #>     │           ├── _aux #>     │           ├── estimations #>     │           └── survey_data #>     └── tb_data #>         ├── arrow #>         ├── cache #>         │   └── clean_survey_data #>         └── output #>             └── temp_out #>                 └── estimations"},{"path":"https://pip-technical-team.github.io/pipload/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R.Andres Castaneda. Author, maintainer.","code":""},{"path":"https://pip-technical-team.github.io/pipload/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Castaneda R (2022). pipload: Loads PIP data memory. R package version 0.1.18, https://pip-technical-team.github.io/pipload/.","code":"@Manual{,   title = {pipload: Loads PIP data into memory},   author = {R.Andres Castaneda},   year = {2022},   note = {R package version 0.1.18},   url = {https://pip-technical-team.github.io/pipload/}, }"},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"pipload","dir":"","previous_headings":"","what":"An R package for loading PIP data","title":"An R package for loading PIP data","text":"goal pipload provide series tools load memory PIP microdata. can load update inventory PIP microdata, well find data recent version country-year-survey data point.","code":""},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for loading PIP data","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"PIP-Technical-Team/pipload\")"},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An R package for loading PIP data","text":"Load library","code":"library(pipload)"},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"microdata","dir":"","previous_headings":"Example","what":"Microdata","title":"An R package for loading PIP data","text":"Load Two datasets Paraguay Poverty Calculator tool:","code":"# Find the data available.  df <- pip_find_data(              country = \"PRY\",              year    = c(2017, 2018),              tool    = \"PC\" ) #> Warning: `pip_find_data()` was deprecated in pipload 0.1.13. #> Please use `pip_find_dlw()` instead.  df$filename #> [1] \"PRY_2017_EPH_V01_M_V02_A_PIP_PC-GPWG.dta\" #> [2] \"PRY_2017_EPH_V01_M_V03_A_PIP_PC-GPWG.dta\" #> [3] \"PRY_2018_EPH_V01_M_V03_A_PIP_PC-GPWG.dta\" #> [4] \"PRY_2018_EPH_V01_M_V04_A_PIP_PC-GPWG.dta\" #> [5] \"PRY_2018_EPH_V01_M_V05_A_PIP_PC-GPWG.dta\"  # load the data df2 <- pip_find_data(              country = \"PRY\",              year    = c(2017, 2018),              tool    = \"PC\" ) #> Warning: `pip_find_data()` was deprecated in pipload 0.1.13. #> Please use `pip_find_dlw()` instead.  names(df2) #>  [1] \"orig\"           \"filename\"       \"country_code\"   \"surveyid_year\"  #>  [5] \"survey_acronym\" \"vermast\"        \"veralt\"         \"collection\"     #>  [9] \"module\"         \"tool\"           \"source\""},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"load-auxiliary-data","dir":"","previous_headings":"Example","what":"load Auxiliary data","title":"An R package for loading PIP data","text":"Load different types auxiliary data","code":"# Load CPI df <- pip_load_aux(\"cpi\") #> v Most recent version of data loaded: #> ''//w1wbgencifs01/pip/PIP-Data_QA/_aux/cpi/cpi'.'fst'' head(df) #>    country_code cpi_year survey_year         cpi ccf survey_acronym #> 1:          AGO     2000     2000.21 0.033848061   1            HBS #> 2:          AGO     2008     2008.50 0.723337197   1      IBEP-MICS #> 3:          AGO     2018     2018.17 2.934414036   1          IDREA #> 4:          ALB     1996     1996.00 0.444572480   1            EWS #> 5:          ALB     2002     2002.00 0.780533048   1           LSMS #> 6:          ALB     2005     2005.00 0.838737128   1           LSMS #>    change_cpi2011     cpi2011 cpi_domain cpi_domain_value cpi2011_unadj #> 1:              0 0.033848061          1                1   0.033848061 #> 2:              1 0.723337197          1                1   0.723337197 #> 3:              1 2.934414036          1                1   2.934414036 #> 4:              1 0.444572480          1                1   0.444572480 #> 5:              1 0.780533048          1                1   0.780533048 #> 6:              1 0.838737128          1                1   0.838737128 #>    cpi_final_2019 cpi_data_level cpi2011_SM21 cpi2011_unadj_SM21 cpi2005_SM21 #> 1:             NA       national   0.03385145         0.03385145  0.071889997 #> 2:             NA       national   0.72328920         0.72328920  1.528669953 #> 3:             NA       national   2.93543023         2.93543023           NA #> 4:             NA       national   0.44446184         0.44446184  0.530049980 #> 5:             NA       national   0.78033877         0.78033877  0.950504005 #> 6:             NA       national   0.83852839         0.83852839  1.000000000 #>        cpi2017          cpi_id #> 1: 0.014199691 CPI_v06_M_v01_A #> 2: 0.303449123 CPI_v06_M_v01_A #> 3: 1.231023884 CPI_v06_M_v01_A #> 4: 0.399635267 CPI_v06_M_v01_A #> 5: 0.701637071 CPI_v06_M_v01_A #> 6: 0.753957905 CPI_v06_M_v01_A  # load PPP df <- pip_load_aux(\"ppp\") #> v Most recent version of data loaded: #> ''//w1wbgencifs01/pip/PIP-Data_QA/_aux/ppp/ppp'.'fst'' head(df) #>    country_code ppp_year release_version adaptation_version       ppp #> 1:          ABW     2005              v1                 v1        NA #> 2:          ABW     2011              v1                 v1 1.6527510 #> 3:          ABW     2011              v1                 v2 1.6527513 #> 4:          ABW     2011              v2                 v1 1.6377631 #> 5:          ABW     2011              v2                 v2 1.6377631 #> 6:          ABW     2017              v1                 v1 1.4804807 #>    ppp_default ppp_default_by_year ppp_domain ppp_data_level #> 1:       FALSE                TRUE          1       national #> 2:       FALSE               FALSE          1       national #> 3:       FALSE               FALSE          1       national #> 4:       FALSE               FALSE          1       national #> 5:        TRUE                TRUE          1       national #> 6:       FALSE                TRUE          1       national  # Load GDP df <- pip_load_aux(\"gdp\") #> v Most recent version of data loaded: #> ''//w1wbgencifs01/pip/PIP-Data_QA/_aux/gdp/gdp'.'fst'' head(df) #>    country_code year       gdp gdp_data_level gdp_domain #> 1:          ABW 1986 17231.380       national   national #> 2:          ABW 1987 20262.945       national   national #> 3:          ABW 1988 24343.255       national   national #> 4:          ABW 1989 27313.495       national   national #> 5:          ABW 1990 27884.253       national   national #> 6:          ABW 1991 28953.525       national   national  measure <- \"cpi\"  # see versions available df      <- pip_load_aux(measure, version = \"available\") #> Versions available for cpi #>  [1] \"2022-02-25 14:44:35 EST\" \"2022-02-23 15:44:16 EST\" #>  [3] \"2022-01-25 18:08:08 EST\" \"2022-01-07 14:38:08 EST\" #>  [5] \"2021-04-16 13:04:48 EDT\" \"2021-03-29 16:34:08 EDT\" #>  [7] \"2021-03-03 07:26:44 EST\" \"2021-02-24 09:44:48 EST\" #>  [9] \"2021-02-02 06:46:39 EST\" \"2021-02-01 13:09:02 EST\" #> [11] \"2021-01-29 09:23:20 EST\" \"2021-01-22 06:47:38 EST\" #> [13] \"2020-12-23 13:00:06 EST\" df #>  [1] \"20220225144435\" \"20220223154416\" \"20220125180808\" \"20220107143808\" #>  [5] \"20210416130448\" \"20210329163408\" \"20210303072644\" \"20210224094448\" #>  [9] \"20210202064639\" \"20210201130902\" \"20210129092320\" \"20210122064738\" #> [13] \"20201223130006\"  # Load version of \"2020-08-07 10:15:48 EDT\" df      <- pip_load_aux(measure, version = \"20220223154416\") #> v Version of data loaded: 2022-02-23 15:44:16: #> '//w1wbgencifs01/pip/PIP-Data_QA/_aux/cpi/_vintage/cpi_20220223154416.fst' #> i Labels not applied to versioning data head(df) #>    country_code cpi_year survey_year         cpi ccf survey_acronym #> 1:          AGO     2000     2000.21 0.033848061   1            HBS #> 2:          AGO     2008     2008.50 0.723337197   1      IBEP-MICS #> 3:          AGO     2018     2018.17 2.934414036   1          IDREA #> 4:          ALB     1996     1996.00 0.444572480   1            EWS #> 5:          ALB     2002     2002.00 0.780533048   1           LSMS #> 6:          ALB     2005     2005.00 0.838737128   1           LSMS #>    change_cpi2011     cpi2011 cpi_domain cpi_domain_value cpi2011_unadj #> 1:              0 0.033848061          1                1   0.033848061 #> 2:              1 0.723337197          1                1   0.723337197 #> 3:              1 2.934414036          1                1   2.934414036 #> 4:              1 0.444572480          1                1   0.444572480 #> 5:              1 0.780533048          1                1   0.780533048 #> 6:              1 0.838737128          1                1   0.838737128 #>    cpi_final_2019 cpi_data_level cpi2011_SM21 cpi2011_unadj_SM21 cpi2005_SM21 #> 1:             NA       national   0.03385145         0.03385145  0.071889997 #> 2:             NA       national   0.72328920         0.72328920  1.528669953 #> 3:             NA       national   2.93543023         2.93543023           NA #> 4:             NA       national   0.44446184         0.44446184  0.530049980 #> 5:             NA       national   0.78033877         0.78033877  0.950504005 #> 6:             NA       national   0.83852839         0.83852839  1.000000000 #>        cpi2017          cpi_id #> 1: 0.014199691 CPI_v06_M_v01_A #> 2: 0.303449123 CPI_v06_M_v01_A #> 3: 1.231023884 CPI_v06_M_v01_A #> 4: 0.399635267 CPI_v06_M_v01_A #> 5: 0.701637071 CPI_v06_M_v01_A #> 6: 0.753957905 CPI_v06_M_v01_A  # Load one version before current one (i.e., load previous version) df      <- pip_load_aux(measure, version = -1) #> v Version of data loaded: 2022-02-23 15:44:16: #> '//w1wbgencifs01/pip/PIP-Data_QA/_aux/cpi/_vintage/cpi_20220223154416.fst' #> i Labels not applied to versioning data head(df) #>    country_code cpi_year survey_year         cpi ccf survey_acronym #> 1:          AGO     2000     2000.21 0.033848061   1            HBS #> 2:          AGO     2008     2008.50 0.723337197   1      IBEP-MICS #> 3:          AGO     2018     2018.17 2.934414036   1          IDREA #> 4:          ALB     1996     1996.00 0.444572480   1            EWS #> 5:          ALB     2002     2002.00 0.780533048   1           LSMS #> 6:          ALB     2005     2005.00 0.838737128   1           LSMS #>    change_cpi2011     cpi2011 cpi_domain cpi_domain_value cpi2011_unadj #> 1:              0 0.033848061          1                1   0.033848061 #> 2:              1 0.723337197          1                1   0.723337197 #> 3:              1 2.934414036          1                1   2.934414036 #> 4:              1 0.444572480          1                1   0.444572480 #> 5:              1 0.780533048          1                1   0.780533048 #> 6:              1 0.838737128          1                1   0.838737128 #>    cpi_final_2019 cpi_data_level cpi2011_SM21 cpi2011_unadj_SM21 cpi2005_SM21 #> 1:             NA       national   0.03385145         0.03385145  0.071889997 #> 2:             NA       national   0.72328920         0.72328920  1.528669953 #> 3:             NA       national   2.93543023         2.93543023           NA #> 4:             NA       national   0.44446184         0.44446184  0.530049980 #> 5:             NA       national   0.78033877         0.78033877  0.950504005 #> 6:             NA       national   0.83852839         0.83852839  1.000000000 #>        cpi2017          cpi_id #> 1: 0.014199691 CPI_v06_M_v01_A #> 2: 0.303449123 CPI_v06_M_v01_A #> 3: 1.231023884 CPI_v06_M_v01_A #> 4: 0.399635267 CPI_v06_M_v01_A #> 5: 0.701637071 CPI_v06_M_v01_A #> 6: 0.753957905 CPI_v06_M_v01_A"},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"inventory-of-microdata","dir":"","previous_headings":"Example","what":"Inventory of microdata","title":"An R package for loading PIP data","text":"Check inventory data udpate","code":"# Update inventory of PRY pip_inventory(\"update\", country = \"PRY\") #> i reading PIP directory #> v reading PIP directory [3.2s] #>  #> i file 'inventory.fst' is up to date. #> No update performed  # Load inventory df <- pip_inventory() df$filename[1:5] #> [1] \"AGO_2000_HBS_V01_M_V01_A_PIP_PC-GPWG.dta\"       #> [2] \"AGO_2008_IBEP-MICS_V02_M_V02_A_PIP_PC-GPWG.dta\" #> [3] \"AGO_2008_IBEP-MICS_V02_M_V02_A_PIP_TB-ALL.dta\"  #> [4] \"AGO_2018_IDREA_V01_M_V01_A_PIP_PC-GPWG.dta\"     #> [5] \"AGO_2018_IDREA_V01_M_V01_A_PIP_TB-ALL.dta\""},{"path":"https://pip-technical-team.github.io/pipload/reference/add_gls_to_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","title":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","text":"official value Sys.getenv(\"PIP_ROOT_DIR\") can provide object root_dir  <- \"<directory>\" executing first function. way, object gls, promise, created using root_dir. Otherwise, can specify complete directory path function.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/add_gls_to_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","text":"","code":"add_gls_to_env(   root_dir = NULL,   out_dir = NULL,   vintage = \"latest\",   suffix = NULL,   clean = FALSE )"},{"path":"https://pip-technical-team.github.io/pipload/reference/add_gls_to_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","text":"root_dir character: root directory PIP data out_dir character: Output Directory. Default root_dir vintage character: name output folder. \"latest\", \"new\", name. \"latest\" (default), recent version available vintage directory form \"%Y%m%d\" used. \"new\", new folder name form \"%Y%m%d\" created. names coerced lower cases suffix character: suffix added name vintage folder. Useful testing purposes. Something form \"%Y%m%d_test\" taken account vintage = \"latest\" clean logical: TRUE cleans empty directories created mistake. Default FALSE.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/add_gls_to_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","text":"TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pip.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign PIP class to object — as_pip","title":"Assign PIP class to object — as_pip","text":"Assign PIP class object","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign PIP class to object — as_pip","text":"","code":"as_pip(x)  # S3 method for data.frame as_pip(x)  # S3 method for list as_pip(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign PIP class to object — as_pip","text":"x dataframe list. dataframe, number unique elements variable module 1","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign PIP class to object — as_pip","text":"data.frame list","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipgd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pipgd class for group data — as_pipgd","title":"Add pipgd class for group data — as_pipgd","text":"Add pipgd class group data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipgd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pipgd class for group data — as_pipgd","text":"","code":"as_pipgd(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipgd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pipgd class for group data — as_pipgd","text":"x data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipgd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add pipgd class for group data — as_pipgd","text":"data frame new class pipgd","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipid.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pipid class for imputed data — as_pipid","title":"Add pipid class for imputed data — as_pipid","text":"Add pipid class imputed data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pipid class for imputed data — as_pipid","text":"","code":"as_pipid(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pipid class for imputed data — as_pipid","text":"x data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add pipid class for imputed data — as_pipid","text":"data frame new class pipid","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pipmd class for microdata — as_pipmd","title":"Add pipmd class for microdata — as_pipmd","text":"Add pipmd class microdata","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pipmd class for microdata — as_pipmd","text":"","code":"as_pipmd(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pipmd class for microdata — as_pipmd","text":"x data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add pipmd class for microdata — as_pipmd","text":"data frame new class pipmd","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/assign_pipclass.html","id":null,"dir":"Reference","previous_headings":"","what":"assign correct class to DLW data — assign_pipclass","title":"assign correct class to DLW data — assign_pipclass","text":"assign correct class DLW data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/assign_pipclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assign correct class to DLW data — assign_pipclass","text":"","code":"assign_pipclass(df)"},{"path":"https://pip-technical-team.github.io/pipload/reference/assign_pipclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign correct class to DLW data — assign_pipclass","text":"df dataframe loaded DLW flat structure","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/assign_pipclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign correct class to DLW data — assign_pipclass","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/check_and_create.html","id":null,"dir":"Reference","previous_headings":"","what":"check vintage version and create — check_and_create","title":"check vintage version and create — check_and_create","text":"check vintage version create","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/check_and_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check vintage version and create — check_and_create","text":"","code":"check_and_create(dir, vintage, DATE, clean, verbose)"},{"path":"https://pip-technical-team.github.io/pipload/reference/check_and_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check vintage version and create — check_and_create","text":"dir character: output directory vintage character: name output folder. \"latest\", \"new\", name. \"latest\" (default), recent version available vintage directory form \"%Y%m%d\" used. \"new\", new folder name form \"%Y%m%d\" created. names coerced lower cases DATE character: date form \"%Y%m%d\" clean logical: TRUE cleans empty directories created mistake. Default FALSE. verbose logical: display messages. Default getOption(\"pipload.verbose\")","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"CReate conditions for filtering — create_cond","title":"CReate conditions for filtering — create_cond","text":"CReate conditions filtering CReate conditions filtering","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CReate conditions for filtering — create_cond","text":"","code":"create_cond(x)  create_cond(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/create_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CReate conditions for filtering — create_cond","text":"x argument parsed pip_find_dlw","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CReate conditions for filtering — create_cond","text":"character character","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if path is fs_path and then create folder — create_dir","title":"Check if path is fs_path and then create folder — create_dir","text":"Check path fs_path create folder","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if path is fs_path and then create folder — create_dir","text":"","code":"create_dir(glbs)"},{"path":"https://pip-technical-team.github.io/pipload/reference/create_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if path is fs_path and then create folder — create_dir","text":"glbs list object. fs_paths","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_vintage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create output directory name — create_vintage","title":"Create output directory name — create_vintage","text":"function creates name directory used vintage control PIP project.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_vintage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create output directory name — create_vintage","text":"","code":"create_vintage(vintage = list(name = \"latest\"))"},{"path":"https://pip-technical-team.github.io/pipload/reference/create_vintage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create output directory name — create_vintage","text":"vintage list character: list, objects named following names accepted: c(\"release\", \"ppp_year\", \"ppp_rv\", \"ppp_av\", \"identity\"). Alternatively, single-object list called \"names\" like vintage = list(name = \"some_name\").  character, length equal 1.","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","text":"Convert origianl dta files data frame format suitable PIP","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","text":"","code":"data_to_df(x, y, verbose)"},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","text":"x character: file path y chradter: file name including format verbose logical: TRUE, messages display console.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert origianl dta files to data frame format suitable for PIP — data_to_dt","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_dt","text":"Convert origianl dta files data frame format suitable PIP","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_dt","text":"","code":"data_to_dt(x, y, verbose)"},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_dt","text":"x character: file path y chradter: file name including format verbose logical: TRUE, messages display console.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_dt","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_add_aux_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — pip_add_aux_labels","title":"Title — pip_add_aux_labels","text":"Title","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_add_aux_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — pip_add_aux_labels","text":"","code":"pip_add_aux_labels(x, measure, verbose)"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_add_aux_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — pip_add_aux_labels","text":"x Data frame labeled. measure type data frame, e.g., \"cpi\" \"PPP\". verbose logical: whether display message. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_add_aux_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — pip_add_aux_labels","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":null,"dir":"Reference","previous_headings":"","what":"Create global variables for PIP data management — pip_create_globals","title":"Create global variables for PIP data management — pip_create_globals","text":"Create global variables PIP data management","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create global variables for PIP data management — pip_create_globals","text":"","code":"pip_create_globals(   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   out_dir = root_dir,   vintage = \"latest\",   suffix = NULL,   clean = FALSE,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create global variables for PIP data management — pip_create_globals","text":"root_dir character: root directory PIP data out_dir character: Output Directory. Default root_dir vintage character: name output folder. \"latest\", \"new\", name. \"latest\" (default), recent version available vintage directory form \"%Y%m%d\" used. \"new\", new folder name form \"%Y%m%d\" created. names coerced lower cases suffix character: suffix added name vintage folder. Useful testing purposes. Something form \"%Y%m%d_test\" taken account vintage = \"latest\" clean logical: TRUE cleans empty directories created mistake. Default FALSE. verbose logical: display messages. Default getOption(\"pipload.verbose\")","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create global variables for PIP data management — pip_create_globals","text":"list","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create global variables for PIP data management — pip_create_globals","text":"","code":"if (FALSE) { pip_create_globals() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Find cache data based on patterns — pip_find_cache","title":"Find cache data based on patterns — pip_find_cache","text":"Find cache data based patterns","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find cache data based on patterns — pip_find_cache","text":"","code":"pip_find_cache(   country = NULL,   year = NULL,   survey_acronym = NULL,   data_level = NULL,   welfare_type = NULL,   source = NULL,   tool = c(\"PC\", \"TB\"),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   pipedir = pip_create_globals(root_dir)$PIP_PIPE_DIR )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find cache data based on patterns — pip_find_cache","text":"country character: vector ISO3 country codes. year numeric: survey year survey_acronym character: Survey acronym data_level character: either \"D1\" national, \"D2\" urban/rural, \"D3\" subnational welfare_type character: Either \"CON\" consumption \"INC\" income source character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added root_dir character: root directory PIP data pipedir charater: directory pipeline. Default pip_create_globals(root_dir)$PIP_PIPE_DIR","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find cache data based on patterns — pip_find_cache","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find cache data based on patterns — pip_find_cache","text":"","code":"if (FALSE) { pip_find_cache() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Find surveys available in PIP drive — pip_find_data","title":"Find surveys available in PIP drive — pip_find_data","text":"function deprecated DLW data loaded directly flat folder structure allows bypassing use datalibweb Stata, making pipdp Stata package useless.now , use dlw functions: pip_load_dlw_inventory, pip_find_dlw, pip_load_dlw.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find surveys available in PIP drive — pip_find_data","text":"","code":"pip_find_data(   country = NULL,   year = NULL,   survey_acronym = NULL,   vermast = NULL,   veralt = NULL,   module = NULL,   tool = NULL,   condition = NULL,   source = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   inv_file = fs::path(maindir, \"_inventory/inventory.fst\"),   filter_to_pc = FALSE,   filter_to_tb = FALSE,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find surveys available in PIP drive — pip_find_data","text":"country character: vector ISO3 country codes. year numeric: survey year survey_acronym character: Survey acronym vermast character: Master version form v## ## veralt character: Alternative version form v## ## module character: combination tool source separated hyphen (e.g., PC-GPWG) tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added condition character: logical condition applies surveys. example, \"year > 2012\". Make sure condition uses names variables pip_load_inventory(): orig, filename, country_code, year, survey_acronym, vermast, veralt, collection, module, tool, source. used arguments country, year, survey_acronym , vermast, veralt, module tool. source character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. root_dir character: root directory PIP data maindir character: Main directory inv_file character: file path loaded. filter_to_pc logical: TRUE filter recent data included Poverty Calculator. Default FALSE filter_to_tb logical: TRUE filter recent data included Table Maker. Default FALSE verbose logical: whether display message. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find surveys available in PIP drive — pip_find_data","text":"data.frame: list filenames loaded pcn_load()","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find surveys available in PIP drive — pip_find_data","text":"","code":"# all years for one country pip_find_data(country = \"ARG\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  #' # all years for more than one country pip_find_data(country = c(\"COL\", \"ARG\")) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # specific years for one country pip_find_data(             country = \"COL\",             year = c(2010, 2012) ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # country FHF does not exist so it will be part of `fail` output (No error) pip_find_data(        country = c(\"ARG\", \"FHF\"),        year = 2010 ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load a different module (e.g., GPWG) pip_find_data(country = \"PRY\",              year = 2010,              module = \"PC-GPWG\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load different sources pip_find_data(country = \"COL\",              source = \"HIST\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied if (FALSE) { # more than two years for more than one country (only firt year will be used) pip_find_data(        country = c(\"COL\", \"ARG\"),        year = c(2010, 2012) )  # all countries and years pip_find_data() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_dlw.html","id":null,"dir":"Reference","previous_headings":"","what":"Find surveys available for DatalibWeb — pip_find_dlw","title":"Find surveys available for DatalibWeb — pip_find_dlw","text":"Find surveys available DatalibWeb","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_dlw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find surveys available for DatalibWeb — pip_find_dlw","text":"","code":"pip_find_dlw(   country = NULL,   year = NULL,   survey_acronym = NULL,   vermast = NULL,   veralt = NULL,   module = NULL,   tool = NULL,   condition = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   dlw_dir = pip_create_globals(root_dir)$DLW_RAW_DIR,   filter_to_pc = FALSE,   filter_to_tb = FALSE,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_dlw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find surveys available for DatalibWeb — pip_find_dlw","text":"country character: vector ISO3 country codes. year numeric: survey year survey_acronym character: Survey acronym vermast character: Master version form v## ## veralt character: Alternative version form v## ## module character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added condition character: logical condition applies surveys. example, \"year > 2012\". Make sure condition uses names variables pip_load_dlw_inventory(): orig, filename, country_code, year, survey_acronym, vermast, veralt, collection, module, tool, source. used arguments country, year, survey_acronym , vermast, veralt, module tool. root_dir character: root directory PIP data dlw_dir character: Main directory filter_to_pc logical: TRUE filter recent data included Poverty Calculator. Default FALSE filter_to_tb logical: TRUE filter recent data included Table Maker. Default FALSE verbose logical: whether display message. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_dlw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find surveys available for DatalibWeb — pip_find_dlw","text":"data.frame: list filenames loaded pcn_load()","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_dlw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find surveys available for DatalibWeb — pip_find_dlw","text":"","code":"# all years for one country pip_find_dlw(country = \"ARG\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  #' # all years for more than one country pip_find_dlw(country = c(\"COL\", \"ARG\")) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # specific years for one country pip_find_dlw(             country = \"COL\",             year = c(2010, 2012) ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # country FHF does not exist so it will be part of `fail` output (No error) pip_find_dlw(        country = c(\"ARG\", \"FHF\"),        year = 2010 ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load a different module (e.g., GPWG) pip_find_dlw(country = \"PRY\",              year = 2010,              module = \"GPWG\",              tool = \"PC\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load different modules pip_find_dlw(country = \"COL\",              module = \"HIST\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied if (FALSE) { # more than two years for more than one country (only firt year will be used) pip_find_dlw(        country = c(\"COL\", \"ARG\"),        year = c(2010, 2012) )  # all countries and years pip_find_dlw() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"Load Update PIP microdata inventory. Wrapper function pip_load_inventory pip_update_inventory","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"","code":"pip_inventory(   action = \"load\",   country = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   force = FALSE,   inventory_version = NULL )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"action character: Either load update country character: vector ISO3 country code update root_dir character: root directory PIP data maindir character: main directory. default uses pip_create_globals(root_dir)$PIP_DATA_DIR force logical: TRUE, forced update implemented inventory_version date: date inventory version load","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"","code":"if (FALSE) { pip_inventory(\"load\") }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_module","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_module","text":"Make sure keep one module per survey ID loading.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_module","text":"","code":"pip_keep_pc_module(df)"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_module","text":"df dataframe pip_load_dlw_inventory()","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_module","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","text":"Make sure keep one module per survey ID loading.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","text":"","code":"pip_keep_pc_source(df)"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","text":"df dataframe pip_load_inventory()","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_all_aux.html","id":null,"dir":"Reference","previous_headings":"","what":"Load all auxiliary files in memory — pip_load_all_aux","title":"Load all auxiliary files in memory — pip_load_all_aux","text":"Load auxiliary files memory","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_all_aux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load all auxiliary files in memory — pip_load_all_aux","text":"","code":"pip_load_all_aux(   replace = NULL,   aux = c(\"cpi\", \"ppp\", \"pfw\", \"pop\", \"gdm\"),   aux_names = aux,   envir = globalenv(),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   version = NULL,   file_to_load = NULL,   apply_label = TRUE,   verbose = FALSE,   preferred_format = NULL )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_all_aux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load all auxiliary files in memory — pip_load_all_aux","text":"replace logical NULL. Whether replace objects envir aux character: auxiliary files load. Default c(\"cpi\", \"ppp\", \"pfw\", \"pop\", \"gdm\", \"gdp\", \"pce\"). \"\", auxiliary frame loaded memory aux_names character length aux. Names objects loaded. default aux envir environment data frame allocated. Default globalenv() root_dir character: root directory PIP data maindir character: main directory. default uses pip_create_globals(root_dir)$PIP_DATA_DIR version integer quoted directive. \"available\": displays list available versions measure. \"select\"|\"pick\"|\"choose\": allows user select vintage measure. integer zero negative number (e.g., -1), pip_load_aux load number versions recent version available. , 0, loads current version. -1, load version current, -2 loads two versions current one, . positive number, must quoted (character) form \"%Y%m%d%H%M%S\". file_to_load character: file path load. work argument apply_label logical: TRUE, predefined labels apply data loaded using file_to_load argument. Default TRUE. Tip: change FALSE main structure data changed labels updated verbose logical: whether display message. Default TRUE preferred_format character: preferred format. default \"fst\".","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_all_aux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load all auxiliary files in memory — pip_load_all_aux","text":"invisible TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":null,"dir":"Reference","previous_headings":"","what":"Load any auxiliary data — pip_load_aux","title":"Load any auxiliary data — pip_load_aux","text":"Load auxiliary data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load any auxiliary data — pip_load_aux","text":"","code":"pip_load_aux(   measure = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   msrdir = fs::path(maindir, \"_aux\", measure),   version = NULL,   file_to_load = NULL,   apply_label = TRUE,   verbose = getOption(\"pipload.verbose\"),   preferred_format = NULL )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load any auxiliary data — pip_load_aux","text":"measure character: Measure used. e.g., \"cpi\" \"ppp\". root_dir character: root directory PIP data maindir character: main directory. default uses pip_create_globals(root_dir)$PIP_DATA_DIR msrdir character: measure (CPI) directory. created pip_prices(). version integer quoted directive. \"available\": displays list available versions measure. \"select\"|\"pick\"|\"choose\": allows user select vintage measure. integer zero negative number (e.g., -1), pip_load_aux load number versions recent version available. , 0, loads current version. -1, load version current, -2 loads two versions current one, . positive number, must quoted (character) form \"%Y%m%d%H%M%S\". file_to_load character: file path load. work argument apply_label logical: TRUE, predefined labels apply data loaded using file_to_load argument. Default TRUE. Tip: change FALSE main structure data changed labels updated verbose logical: whether display message. Default TRUE preferred_format character: preferred format. default \"fst\".","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load any auxiliary data — pip_load_aux","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load any auxiliary data — pip_load_aux","text":"","code":"# Load CPI cpi <- pip_load_aux(\"cpi\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # load PPP ppp <- pip_load_aux(\"ppp\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load GDP gdp <- pip_load_aux(\"gdp\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  measure <- \"cpi\" av      <- pip_load_aux(measure, version = \"available\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied head(av) #> Error in head(av): object 'av' not found df      <- pip_load_aux(measure, version = av[1]) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied head(df) #>                                                #> 1 function (x, df1, df2, ncp, log = FALSE)     #> 2 {                                            #> 3     if (missing(ncp))                        #> 4         .Call(C_df, x, df1, df2, log)        #> 5     else .Call(C_dnf, x, df1, df2, ncp, log) #> 6 }                                            df      <- pip_load_aux(measure, version = -1) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied head(df) #>                                                #> 1 function (x, df1, df2, ncp, log = FALSE)     #> 2 {                                            #> 3     if (missing(ncp))                        #> 4         .Call(C_df, x, df1, df2, log)        #> 5     else .Call(C_dnf, x, df1, df2, ncp, log) #> 6 }                                            if (FALSE) { df      <- pip_load_aux(measure, version = \"pick\") }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Load cache data — pip_load_cache","title":"Load cache data — pip_load_cache","text":"Load cache data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load cache data — pip_load_cache","text":"","code":"pip_load_cache(   country = NULL,   year = NULL,   tool = c(\"PC\", \"TB\"),   survey_acronym = NULL,   data_level = NULL,   welfare_type = NULL,   source = NULL,   cache_id = NULL,   condition = NULL,   type = c(\"dataframe\", \"list\"),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   pipedir = pip_create_globals(root_dir)$PIP_PIPE_DIR,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load cache data — pip_load_cache","text":"country character: vector ISO3 country codes. year numeric: survey year tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added survey_acronym character: Survey acronym data_level character: either \"D1\" national, \"D2\" urban/rural, \"D3\" subnational welfare_type character: Either \"CON\" consumption \"INC\" income source character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. cache_id character: user knows precise cache ID condition character: logical condition applies surveys. example, \"year > 2012\". Make sure condition uses names variables pip_load_inventory(): orig, filename, country_code, year, survey_acronym, vermast, veralt, collection, module, tool, source. used arguments country, year, survey_acronym , vermast, veralt, module tool. type character: Either dataframe list. Defaults dataframe. root_dir character: root directory PIP data pipedir charater: directory pipeline. Default pip_create_globals(root_dir)$PIP_PIPE_DIR verbose logical: TRUE, display informative messages. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load cache data — pip_load_cache","text":"data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load cache data — pip_load_cache","text":"","code":"if (FALSE) { pip_load_cache(\"PRY\", 2017) }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Load cache inventory — pip_load_cache_inventory","title":"Load cache inventory — pip_load_cache_inventory","text":"Load cache inventory","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load cache inventory — pip_load_cache_inventory","text":"","code":"pip_load_cache_inventory(   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   pipedir = pip_create_globals(root_dir)$PIP_PIPE_DIR,   tool = c(\"PC\", \"TB\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load cache inventory — pip_load_cache_inventory","text":"root_dir character: root directory PIP data pipedir charater: directory pipeline. Default pip_create_globals(root_dir)$PIP_PIPE_DIR tool character: Either \"PC\" Poverty calculator \"TB\" table maker","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load PIP microdata in different way — pip_load_data","title":"Load PIP microdata in different way — pip_load_data","text":"function deprecated DLW data loaded directly flat folder structure allows bypassing use datalibweb Stata, making pipdp Stata package useless.now , use dlw functions: pip_load_dlw_inventory, pip_find_dlw, pip_load_dlw.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load PIP microdata in different way — pip_load_data","text":"","code":"pip_load_data(   country = NULL,   year = NULL,   survey_acronym = NULL,   vermast = NULL,   veralt = NULL,   module = NULL,   tool = c(\"PC\", \"TB\"),   source = NULL,   survey_id = NULL,   condition = NULL,   type = \"dataframe\",   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   inv_file = fs::path(maindir, \"_inventory/inventory.fst\"),   filter_to_pc = TRUE,   filter_to_tb = FALSE,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load PIP microdata in different way — pip_load_data","text":"country character: vector ISO3 country codes. year numeric: survey year survey_acronym character: Survey acronym vermast character: Master version form v## ## veralt character: Alternative version form v## ## module character: combination tool source separated hyphen (e.g., PC-GPWG) tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added source character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. survey_id character: Vector survey IDs like 'HND_2017_EPHPM_V01_M_V01_A_PIP_PC-GPWG' condition character: logical condition applies surveys. example, \"year > 2012\". Make sure condition uses names variables pip_load_inventory(): orig, filename, country_code, year, survey_acronym, vermast, veralt, collection, module, tool, source. used arguments country, year, survey_acronym , vermast, veralt, module tool. type character: Either dataframe list. Defaults dataframe. root_dir character: root directory PIP data maindir character: Main directory inv_file character: file path loaded. filter_to_pc logical: TRUE filter recent data included Poverty Calculator. Default FALSE filter_to_tb logical: TRUE filter recent data included Table Maker. Default FALSE verbose logical: whether display message. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load PIP microdata in different way — pip_load_data","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load PIP microdata in different way — pip_load_data","text":"","code":"# ONe year and one country df <- pip_load_data(country = \"PRY\",               year    = 2017) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # specific years for one country df <- pip_load_data(             country = \"PRY\",             year = c(2010, 2012) ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # country FHF does not exist so it will be part of `fail` output (No error) df <- pip_load_data(        country = c(\"ARG\", \"FHF\"),        year = 2010 ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load a different module (e.g., GPWG) df <- pip_load_data(country = \"PRY\",              year = 2010,              module = \"PC-GPWG\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load different sources df <- pip_load_data(country = \"COL\",              source = \"HIST\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load using Survey ID df <- pip_load_data(survey_id = c(\"HND_2017_EPHPM_V01_M_V02_A_PIP_PC-GPWG\",                             \"HND_2018_EPHPM_V01_M_V02_A_PIP_PC-GPWG\")                             ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied # Use condition argument df <- pip_find_data(condition = \"country_code %chin% c('PRY', 'KGZ') &                     (surveyid_year >= 2012 & surveyid_year < 2014)\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  if (FALSE) { # more than two years for more than one country (only firt year will be used) pip_load_data(        country = c(\"PRY\", \"ARG\"),        year = c(2010, 2012) )  # all countries and years pip_load_data() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw.html","id":null,"dir":"Reference","previous_headings":"","what":"Loads datalibweb data — pip_load_dlw","title":"Loads datalibweb data — pip_load_dlw","text":"Loads datalibweb data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loads datalibweb data — pip_load_dlw","text":"","code":"pip_load_dlw(   country = NULL,   year = NULL,   survey_acronym = NULL,   vermast = NULL,   veralt = NULL,   module = NULL,   tool = c(\"PC\", \"TB\"),   survey_id = NULL,   condition = NULL,   type = c(\"dataframe\", \"list\"),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   dlw_dir = pip_create_globals(root_dir)$DLW_RAW_DIR,   filter_to_pc = TRUE,   filter_to_tb = FALSE,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loads datalibweb data — pip_load_dlw","text":"country character: vector ISO3 country codes. year numeric: survey year survey_acronym character: Survey acronym vermast character: Master version form v## ## veralt character: Alternative version form v## ## module character: combination tool source separated hyphen (e.g., PC-GPWG) tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added survey_id character: Vector survey IDs like 'HND_2017_EPHPM_V01_M_V01_A_PIP_PC-GPWG' condition character: logical condition applies surveys. example, \"year > 2012\". Make sure condition uses names variables pip_load_inventory(): orig, filename, country_code, year, survey_acronym, vermast, veralt, collection, module, tool, source. used arguments country, year, survey_acronym , vermast, veralt, module tool. type character: Either dataframe list. Defaults dataframe. root_dir character: root directory PIP data dlw_dir character: path datalibweb raw data filter_to_pc logical: TRUE filter recent data included Poverty Calculator. Default FALSE filter_to_tb logical: TRUE filter recent data included Table Maker. Default FALSE verbose logical: whether display message. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loads datalibweb data — pip_load_dlw","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loads datalibweb data — pip_load_dlw","text":"","code":"# ONe year and one country df <- pip_load_dlw(country = \"PRY\",               year    = 2017) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # specific years for one country df <- pip_load_dlw(             country = \"PRY\",             year = c(2010, 2012) ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # country FHF does not exist so it will be part of `fail` output (No error) df <- pip_load_dlw(        country = c(\"ARG\", \"FHF\"),        year = 2010 ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load a different module (e.g., GPWG) df <- pip_load_dlw(country = \"PRY\",              year = 2010,              module = \"GPWG\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  # Load using Survey ID df <- pip_load_dlw(survey_id = c(\"HND_2017_EPHPM_V01_M_V02_A_GMD_GPWG\",                             \"HND_2018_EPHPM_V01_M_V02_A_GMD_GPWG\")                             ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied # Use condition argument df <- pip_load_dlw(condition = \"country_code %chin% c('PRY', 'KGZ') &                     (surveyid_year >= 2012 & surveyid_year < 2014)\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied  if (FALSE) { # more than two years for more than one country (only firt year will be used) pip_load_dlw(        country = c(\"PRY\", \"ARG\"),        year = c(2010, 2012) )  # all countries and years pip_load_dlw() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare DatalibWeb inventory — pip_load_dlw_inventory","title":"Prepare DatalibWeb inventory — pip_load_dlw_inventory","text":"takes dlw inventory csv form official folder structure format included pipeline. original csv file updated time dlw inventory updated","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare DatalibWeb inventory — pip_load_dlw_inventory","text":"","code":"pip_load_dlw_inventory(   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   dlw_dir = pip_create_globals(root_dir)$DLW_RAW_DIR )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare DatalibWeb inventory — pip_load_dlw_inventory","text":"root_dir character: root directory PIP data dlw_dir character: path datalibweb raw data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw_inventory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare DatalibWeb inventory — pip_load_dlw_inventory","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_dlw_inventory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare DatalibWeb inventory — pip_load_dlw_inventory","text":"","code":"pip_load_dlw_inventory() #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Load inventory of welfare aggregate datasets — pip_load_inventory","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"function deprecated DLW data loaded directly flat folder structure allows bypassing use datalibweb Stata, making pipdp Stata package useless.now , use dlw functions: pip_load_dlw_inventory, pip_find_dlw, pip_load_dlw.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"","code":"pip_load_inventory(   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   inv_file = fs::path(maindir, \"_inventory/inventory.fst\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"root_dir character: root directory PIP data maindir character: main directory. default uses pip_create_globals(root_dir)$PIP_DATA_DIR inv_file character: file path loaded.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"","code":"if (FALSE) { pip_load_inventory() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Load PIP pre-calculated data sets — pip_load_results","title":"Load PIP pre-calculated data sets — pip_load_results","text":"Load PIP pre-calculated data sets","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load PIP pre-calculated data sets — pip_load_results","text":"","code":"pip_load_results(   output = NULL,   country = NULL,   year = NULL,   tool = c(\"PC\", \"TB\"),   type = c(\"dataframe\", \"list\"),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load PIP pre-calculated data sets — pip_load_results","text":"output character: name output file country character: vector ISO3 country codes. year numeric: survey year tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added type character: Either dataframe list. Defaults dataframe. root_dir character: root directory PIP data verbose logical: TRUE, display informative messages. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load PIP pre-calculated data sets — pip_load_results","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load PIP pre-calculated data sets — pip_load_results","text":"","code":"pip_load_results(\"interpolated_means\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error: [EACCES] Failed to make directory '/PIP-Data_QA': permission denied"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Update PIP microdata inventory — pip_update_inventory","title":"Update PIP microdata inventory — pip_update_inventory","text":"Update PIP microdata inventory","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update PIP microdata inventory — pip_update_inventory","text":"","code":"pip_update_inventory(   country = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   force = FALSE,   time = format(Sys.time(), \"%Y%m%d%H%M%S\"),   user = Sys.info()[8] )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update PIP microdata inventory — pip_update_inventory","text":"country character: vector ISO3 country code update root_dir character: root directory PIP data maindir character: main directory. default uses pip_create_globals(root_dir)$PIP_DATA_DIR force logical: TRUE, forced update implemented time time: time execution saved data signature. Default format(Sys.time(), \"%Y%m%d%H%M%S\") user character: Names UPI user. Default Sys.info()[8]","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update PIP microdata inventory — pip_update_inventory","text":"invisible","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update PIP microdata inventory — pip_update_inventory","text":"","code":"if (FALSE) { pip_update_inventory(\"COL\") }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pipload-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — pipload-package","title":"Objects exported from other packages — pipload-package","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/read_by_format.html","id":null,"dir":"Reference","previous_headings":"","what":"read file dependin on format and convert to data.table — read_by_format","title":"read file dependin on format and convert to data.table — read_by_format","text":"read file dependin format convert data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/read_by_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read file dependin on format and convert to data.table — read_by_format","text":"","code":"read_by_format(pformat)"},{"path":"https://pip-technical-team.github.io/pipload/reference/read_by_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read file dependin on format and convert to data.table — read_by_format","text":"pformat character: format file.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/read_by_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read file dependin on format and convert to data.table — read_by_format","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/survey_id_to_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"take variable survey_id and split it into different vars — survey_id_to_vars","title":"take variable survey_id and split it into different vars — survey_id_to_vars","text":"take variable survey_id split different vars","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/survey_id_to_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"take variable survey_id and split it into different vars — survey_id_to_vars","text":"","code":"survey_id_to_vars(dt)"},{"path":"https://pip-technical-team.github.io/pipload/reference/survey_id_to_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"take variable survey_id and split it into different vars — survey_id_to_vars","text":"dt dataframe variable survey_id available.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/survey_id_to_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"take variable survey_id and split it into different vars — survey_id_to_vars","text":"data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0118","dir":"Changelog","previous_headings":"","what":"pipload 0.1.18","title":"pipload 0.1.18","text":"Add code coverage covr Add new way create vintage folders pip_create_globals()","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0117","dir":"Changelog","previous_headings":"","what":"pipload 0.1.17","title":"pipload 0.1.17","text":"remove deprecated messages. used future.","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0116","dir":"Changelog","previous_headings":"","what":"pipload 0.1.16","title":"pipload 0.1.16","text":"fix issue self reference data.table creating classed add pip_class tests","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0115","dir":"Changelog","previous_headings":"","what":"pipload 0.1.15","title":"pipload 0.1.15","text":"Change creation pip classes S3 mode. now, main function as_pip","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0114","dir":"Changelog","previous_headings":"","what":"pipload 0.1.14","title":"pipload 0.1.14","text":"make functions consistent output suyrvey_id_to_vars() modify pip_class() functions make sure always return data.tables create assign_pipclass() function make work easily pip classes create classes structures future development","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0113","dir":"Changelog","previous_headings":"","what":"pipload 0.1.13","title":"pipload 0.1.13","text":"read recent dir object list create_dir() inside pip_create_globals() Create pip_load_dlw_inventory(), pip_find_dlw(), pip_load_dlw() add lifecycle badges","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0112","dir":"Changelog","previous_headings":"","what":"pipload 0.1.12","title":"pipload 0.1.12","text":"Allow “” pip_load_all_aux() messages failure running errors","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0111","dir":"Changelog","previous_headings":"","what":"pipload 0.1.11","title":"pipload 0.1.11","text":"add function pip_load_dlw_inventory() fix bugs installation.","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-0110","dir":"Changelog","previous_headings":"","what":"pipload 0.1.10","title":"pipload 0.1.10","text":"make sure pipload work RS connect server. pip_create_globals() vignette.","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-019","dir":"Changelog","previous_headings":"","what":"pipload 0.1.9","title":"pipload 0.1.9","text":"add max years countries aggregates pip_create_globals() option moved somewhere else. Maybe pipeline, now included . Allow user use version = 0 pip_load_aux() refer current version allow users select output directory pip_create_globals() vintage name.","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-018","dir":"Changelog","previous_headings":"","what":"pipload 0.1.8","title":"pipload 0.1.8","text":"fix issue several version pip_find_data","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-017","dir":"Changelog","previous_headings":"","what":"pipload 0.1.7","title":"pipload 0.1.7","text":"implement function pip_load_all_aux()","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-016","dir":"Changelog","previous_headings":"","what":"pipload 0.1.6","title":"pipload 0.1.6","text":"Fix messaging pip_load_results() Add function read_by_format() pip_load_aux()","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-015","dir":"Changelog","previous_headings":"","what":"pipload 0.1.5","title":"pipload 0.1.5","text":"add verbose parameter","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-014","dir":"Changelog","previous_headings":"","what":"pipload 0.1.4","title":"pipload 0.1.4","text":"Improve messages root_dir available Add function add add_gls_to_env() used PIP packages add old povcalnet paths retrieve master file vintages.","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-013","dir":"Changelog","previous_headings":"","what":"pipload 0.1.3","title":"pipload 0.1.3","text":"replace global variables .Renviron, PIP_DATA_ROOT_FOLDER PIP_ROOT_DIR","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-012","dir":"Changelog","previous_headings":"","what":"pipload 0.1.2","title":"pipload 0.1.2","text":"Add function pip_load_results() load results precalculated indicators","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-011","dir":"Changelog","previous_headings":"","what":"pipload 0.1.1","title":"pipload 0.1.1","text":"make sure return survey_id properly pip_find_data() replace directory paths zzz.R objects pip_create_globals()","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-010","dir":"Changelog","previous_headings":"","what":"pipload 0.1.0","title":"pipload 0.1.0","text":"load data pip classes","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-001","dir":"Changelog","previous_headings":"","what":"pipload 0.0.1","title":"pipload 0.0.1","text":"Added NEWS.md file track changes package. Added function pip_find_cache() find cache data Added function pip_load_cache() load cache data functions work now tool “PC” “TB”","code":""}]
