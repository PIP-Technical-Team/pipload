[{"path":"https://pip-technical-team.github.io/pipload/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R.Andres Castaneda. Author, maintainer.","code":""},{"path":"https://pip-technical-team.github.io/pipload/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Castaneda R (2022). pipload: Load PIP microdata memory. R package version 0.1.8, https://pip-technical-team.github.io/pipload/.","code":"@Manual{,   title = {pipload: Load PIP microdata into memory},   author = {R.Andres Castaneda},   year = {2022},   note = {R package version 0.1.8},   url = {https://pip-technical-team.github.io/pipload/}, }"},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"pipload","dir":"","previous_headings":"","what":"Load PIP microdata into memory","title":"Load PIP microdata into memory","text":"goal pipload provide series tools load memory PIP microdata. can load update inventory PIP microdata, well find data recent version country-year-survey data point.","code":""},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Load PIP microdata into memory","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"PIP-Technical-Team/pipload\")"},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Load PIP microdata into memory","text":"Load library","code":"library(pipload)"},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"microdata","dir":"","previous_headings":"Example","what":"Microdata","title":"Load PIP microdata into memory","text":"Load Two datasets Paraguay Poverty Calculator tool:","code":"# Find the data available.  df <- pip_find_data(              country = \"PRY\",              year    = c(2017, 2018),              tool    = \"PC\" )  df$filename #> [1] \"PRY_2017_EPH_V01_M_V01_A_PIP_PC-GPWG.dta\" #> [2] \"PRY_2018_EPH_V01_M_V02_A_PIP_PC-GPWG.dta\"  # load the data df2 <- pip_find_data(              country = \"PRY\",              year    = c(2017, 2018),              tool    = \"PC\" )  names(df2) #>  [1] \"orig\"           \"filename\"       \"country_code\"   \"year\"           #>  [5] \"survey_acronym\" \"vermast\"        \"veralt\"         \"collection\"     #>  [9] \"module\"         \"tool\"           \"source\""},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"load-auxiliary-data","dir":"","previous_headings":"Example","what":"load Auxiliary data","title":"Load PIP microdata into memory","text":"Load different types auxiliary data","code":"# Load CPI df <- pip_load_aux(\"cpi\") #> Most recent version of data loaded head(df) #>   country_code surveyid_year reference_year        cpi ccf cpi_domain #> 1          AGO          2000        2000.21 0.03384806   1          1 #> 2          AGO          2008        2008.50 0.72333720   1          1 #> 3          AGO          2018        2018.17 3.06059498   1          1 #> 4          ALB          1996        1996.00 0.44443273   1          1 #> 5          ALB          2002        2002.00 0.78028772   1          1 #> 6          ALB          2005        2005.00 0.83847346   1          1 #>   cpi_data_level survey_acronym #> 1       national            HBS #> 2       national      IBEP-MICS #> 3       national          IDREA #> 4       national            EWS #> 5       national           LSMS #> 6       national           LSMS  # load PPP df <- pip_load_aux(\"ppp\") #> Most recent version of data loaded head(df) #>   country_code ppp_year release_version adaptation_version      ppp ppp_default #> 1          ABW     2005              v1                 v1       NA       FALSE #> 2          ABW     2011              v1                 v1 1.652751       FALSE #> 3          ABW     2011              v1                 v2 1.652751       FALSE #> 4          ABW     2011              v2                 v1 1.637763       FALSE #> 5          ABW     2011              v2                 v2 1.637763        TRUE #> 6          ABW     2017              v1                 v1 1.480481       FALSE #>   ppp_default_by_year ppp_domain ppp_data_level #> 1                TRUE          1       national #> 2               FALSE          1       national #> 3               FALSE          1       national #> 4               FALSE          1       national #> 5                TRUE          1       national #> 6                TRUE          1       national  # Load GDP df <- pip_load_aux(\"gdp\") #> Most recent version of data loaded head(df) #>   country_code year gdp_data_level      gdp gdp_domain #> 1          ABW 1986              2 15669.62          1 #> 2          ABW 1987              2 18427.61          1 #> 3          ABW 1988              2 22134.02          1 #> 4          ABW 1989              2 24837.95          1 #> 5          ABW 1990              2 25357.79          1 #> 6          ABW 1991              2 26329.31          1  measure <- \"cpi\"  # see versions available df      <- pip_load_aux(measure, version = \"available\") #> Versions available for cpi #>  [1] \"2020-09-25 23:30:28 EDT\" \"2020-09-23 07:37:31 EDT\" #>  [3] \"2020-09-22 21:30:54 EDT\" \"2020-09-22 21:14:13 EDT\" #>  [5] \"2020-09-08 11:44:31 EDT\" \"2020-09-08 11:42:41 EDT\" #>  [7] \"2020-09-08 11:41:11 EDT\" \"2020-08-24 14:25:08 EDT\" #>  [9] \"2020-08-24 14:22:42 EDT\" \"2020-08-24 10:14:32 EDT\" #> [11] \"2020-08-11 10:24:42 EDT\" \"2020-08-11 10:17:47 EDT\" #> [13] \"2020-08-11 10:09:44 EDT\" \"2020-08-07 10:15:48 EDT\" #> [15] \"2020-08-06 14:22:36 EDT\" df #>  [1] \"20200925233028\" \"20200923073731\" \"20200922213054\" \"20200922211413\" #>  [5] \"20200908114431\" \"20200908114241\" \"20200908114111\" \"20200824142508\" #>  [9] \"20200824142242\" \"20200824101432\" \"20200811102442\" \"20200811101747\" #> [13] \"20200811100944\" \"20200807101548\" \"20200806142236\"  # Load version of \"2020-08-07 10:15:48 EDT\" df      <- pip_load_aux(measure, version = \"20200807101548\") #> Version of data loaded: 2020-08-07 10:15:48 head(df) #>   country_code surveyid_year reference_year    cpi2011 ccf datalevel #> 1          AGO          2000        2000.21 0.03384806   1         2 #> 2          AGO          2008        2008.50 0.72333720   1         2 #> 3          AGO          2018        2018.17 3.06059498   1         2 #> 4          ALB          1996        1996.00 0.44443273   1         2 #> 5          ALB          2002        2002.00 0.78028772   1         2 #> 6          ALB          2005        2005.00 0.83847346   1         2  # Load one version before current one (i.e., load previous version) df      <- pip_load_aux(measure, version = -1) #> Version of data loaded: 2020-09-23 07:37:31 head(df) #>   country_code surveyid_year reference_year        cpi ccf cpi_domain #> 1          AGO          2000        2000.21 0.03384806   1          1 #> 2          AGO          2008        2008.50 0.72333720   1          1 #> 3          AGO          2018        2018.17 3.06059498   1          1 #> 4          ALB          1996        1996.00 0.44443273   1          1 #> 5          ALB          2002        2002.00 0.78028772   1          1 #> 6          ALB          2005        2005.00 0.83847346   1          1 #>   cpi_data_level survey_acronym #> 1       national            HBS #> 2       national      IBEP-MICS #> 3       national          IDREA #> 4       national            EWS #> 5       national           LSMS #> 6       national           LSMS"},{"path":"https://pip-technical-team.github.io/pipload/index.html","id":"inventory-of-microdata","dir":"","previous_headings":"Example","what":"Inventory of microdata","title":"Load PIP microdata into memory","text":"Check inventory data udpate","code":"# Update inventory of PRY pip_inventory(\"update\", country = \"PRY\") #> data inventory changed for PRY. #> Data signature has changed, it was not found, or update was forced. #>  `inventory.fst` has been updated  # Load inventory df <- pip_inventory() df$filename[1:5] #> [1] \"AFG_2007_NRVA_V01_M_V05_A_PIP_PC-GPWG.dta\" #> [2] \"AFG_2007_NRVA_V01_M_V05_A_PIP_TB-ALL.dta\"  #> [3] \"AFG_2011_NRVA_V01_M_V05_A_PIP_PC-GPWG.dta\" #> [4] \"AFG_2011_NRVA_V01_M_V05_A_PIP_TB-ALL.dta\"  #> [5] \"AGO_2000_HBS_V01_M_V01_A_PIP_PC-GPWG.dta\""},{"path":"https://pip-technical-team.github.io/pipload/reference/add_gls_to_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","title":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","text":"official value Sys.getenv(\"PIP_ROOT_DIR\") can provide object root_dir  <- \"<directory>\" executing first function. way, object gls, promise, created using root_dir. Otherwise, can specify complete directory path function.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/add_gls_to_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","text":"","code":"add_gls_to_env()"},{"path":"https://pip-technical-team.github.io/pipload/reference/add_gls_to_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add gls list to the global envirnment. To be used in zzz.R in other packages — add_gls_to_env","text":"TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipgd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pipgd class — as_pipgd","title":"Add pipgd class — as_pipgd","text":"Add pipgd class","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipgd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pipgd class — as_pipgd","text":"","code":"as_pipgd(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipgd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pipgd class — as_pipgd","text":"x data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipgd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add pipgd class — as_pipgd","text":"data frame new class pipgd","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipid.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pipid class — as_pipid","title":"Add pipid class — as_pipid","text":"Add pipid class","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pipid class — as_pipid","text":"","code":"as_pipid(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pipid class — as_pipid","text":"x data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add pipid class — as_pipid","text":"data frame new class pipid","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add pipmd class — as_pipmd","title":"Add pipmd class — as_pipmd","text":"Add pipmd class","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add pipmd class — as_pipmd","text":"","code":"as_pipmd(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add pipmd class — as_pipmd","text":"x data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/as_pipmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add pipmd class — as_pipmd","text":"data frame new class pipmd","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"CReate conditions for filtering — create_cond","title":"CReate conditions for filtering — create_cond","text":"CReate conditions filtering","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CReate conditions for filtering — create_cond","text":"","code":"create_cond(x)"},{"path":"https://pip-technical-team.github.io/pipload/reference/create_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CReate conditions for filtering — create_cond","text":"x argument parsed pip_find_data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/create_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CReate conditions for filtering — create_cond","text":"character","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","text":"Convert origianl dta files data frame format suitable PIP","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","text":"","code":"data_to_df(x, y, verbose)"},{"path":"https://pip-technical-team.github.io/pipload/reference/data_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert origianl dta files to data frame format suitable for PIP — data_to_df","text":"x character: file path y chradter: file name including format verbose logical: TRUE, messages display console.","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_add_aux_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — pip_add_aux_labels","title":"Title — pip_add_aux_labels","text":"Title","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_add_aux_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — pip_add_aux_labels","text":"","code":"pip_add_aux_labels(x, measure, verbose)"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_add_aux_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — pip_add_aux_labels","text":"x Data frame labeled. measure type data frame, e.g., \"cpi\" \"PPP\". verbose logical: whether display message. Default TRUE","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":null,"dir":"Reference","previous_headings":"","what":"Create global variables for PIP data management — pip_create_globals","title":"Create global variables for PIP data management — pip_create_globals","text":"Create global variables PIP data management","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create global variables for PIP data management — pip_create_globals","text":"","code":"pip_create_globals(root_dir = Sys.getenv(\"PIP_ROOT_DIR\"))"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create global variables for PIP data management — pip_create_globals","text":"root_dir character: root directory PIP data","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_create_globals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create global variables for PIP data management — pip_create_globals","text":"","code":"if (FALSE) { pip_create_globals() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Find cache data based on patterns — pip_find_cache","title":"Find cache data based on patterns — pip_find_cache","text":"Find cache data based patterns","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find cache data based on patterns — pip_find_cache","text":"","code":"pip_find_cache(   country = NULL,   year = NULL,   survey_acronym = NULL,   data_level = NULL,   welfare_type = NULL,   source = NULL,   tool = c(\"PC\", \"TB\"),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   pipedir = pip_create_globals(root_dir)$PIP_PIPE_DIR )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find cache data based on patterns — pip_find_cache","text":"country character: vector ISO3 country codes. year numeric: survey year survey_acronym character: Survey acronym data_level character: either \"D1\" national, \"D2\" urban/rural, \"D3\" subnational welfare_type character: Either \"CON\" consumption \"INC\" income source character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added root_dir character: root directory PIP data pipedir charater: directory pipeline. Default pip_create_globals(root_dir)$PIP_PIPE_DIR","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find cache data based on patterns — pip_find_cache","text":"","code":"if (FALSE) { pip_find_cache() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":null,"dir":"Reference","previous_headings":"","what":"pip_find_data\nFind surveys available for PIP — pip_find_data","title":"pip_find_data\nFind surveys available for PIP — pip_find_data","text":"pip_find_data Find surveys available PIP","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pip_find_data\nFind surveys available for PIP — pip_find_data","text":"","code":"pip_find_data(   country = NULL,   year = NULL,   survey_acronym = NULL,   vermast = NULL,   veralt = NULL,   module = NULL,   tool = NULL,   condition = NULL,   source = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   inv_file = paste0(maindir, \"_inventory/inventory.fst\"),   filter_to_pc = FALSE,   filter_to_tb = FALSE,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pip_find_data\nFind surveys available for PIP — pip_find_data","text":"country character: vector ISO3 country codes. year numeric: survey year survey_acronym character: Survey acronym vermast character: Master version form v## ## veralt character: Alternative version form v## ## module character: combination tool source separated hyphen (e.g., PC-GPWG) tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added condition character: logical condition applies surveys. example, \"year > 2012\". Make sure condition uses names variables pip_load_inventory(): orig, filename, country_code, year, survey_acronym, vermast, veralt, collection, module, tool, source. used arguments country, year, survey_acronym , vermast, veralt, module tool. source character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. maindir character: Main directory inv_file character: file path loaded. filter_to_pc logical: TRUE filter recent data included Poverty Calculator. Default FALSE filter_to_tb logical: TRUE filter recent data included Table Maker. Default FALSE verbose logical: whether display message. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pip_find_data\nFind surveys available for PIP — pip_find_data","text":"data.frame: list filenames loaded pcn_load()","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_find_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pip_find_data\nFind surveys available for PIP — pip_find_data","text":"","code":"# all years for one country pip_find_data(country = \"ARG\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = \"ARG\"): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  #' # all years for more than one country pip_find_data(country = c(\"COL\", \"ARG\")) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = c(\"COL\", \"ARG\")): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # specific years for one country pip_find_data(             country = \"COL\",             year = c(2010, 2012) ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = \"COL\", year = c(2010, 2012)): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # country FHF does not exist so it will be part of `fail` output (No error) pip_find_data(        country = c(\"ARG\", \"FHF\"),        year = 2010 ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = c(\"ARG\", \"FHF\"), year = 2010): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # Load a different module (e.g., GPWG) pip_find_data(country = \"PRY\",              year = 2010,              module = \"PC-GPWG\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = \"PRY\", year = 2010, module = \"PC-GPWG\"): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # Load different sources pip_find_data(country = \"COL\",              source = \"HIST\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = \"COL\", source = \"HIST\"): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection if (FALSE) { # more than two years for more than one country (only firt year will be used) pip_find_data(        country = c(\"COL\", \"ARG\"),        year = c(2010, 2012) )  # all countries and years pip_find_data() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"Load Update PIP microdata inventory. Wrapper function pip_load_inventory pip_update_inventory","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"","code":"pip_inventory(   action = \"load\",   country = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   force = FALSE,   inventory_version = NULL )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"action character: Either load update country character: vector ISO3 country code update maindir character: main directory. default uses pip_create_globals(root_dir)$PIP_DATA_DIR force logical: TRUE, forced update implemented inventory_version date: date inventory version load","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_inventory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load or Update PIP microdata inventory. Wrapper of function pip_load_inventory and\npip_update_inventory — pip_inventory","text":"","code":"if (FALSE) { pip_inventory(\"load\") }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","text":"Make sure keep one module per survey ID loading.","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","text":"","code":"pip_keep_pc_source(df)"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_keep_pc_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sure we keep only one module per survey ID when loading. — pip_keep_pc_source","text":"df dataframe pip_load_inventory()","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_all_aux.html","id":null,"dir":"Reference","previous_headings":"","what":"Load all auxiliary files in memory — pip_load_all_aux","title":"Load all auxiliary files in memory — pip_load_all_aux","text":"Load auxiliary files memory","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_all_aux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load all auxiliary files in memory — pip_load_all_aux","text":"","code":"pip_load_all_aux(   replace = NULL,   aux = c(\"cpi\", \"ppp\", \"pfw\", \"pop\", \"gdm\"),   aux_names = aux,   envir = globalenv(),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   version = NULL,   file_to_load = NULL,   apply_label = TRUE,   verbose = FALSE,   preferred_format = NULL )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_all_aux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load all auxiliary files in memory — pip_load_all_aux","text":"replace logical NULL. Whether replace objects envir aux character: auxiliary files load. Default c(\"cpi\", \"ppp\", \"pfw\", \"pop\", \"gdm\", \"gdp\", \"pce\") aux_names character length aux. Names objects loaded. default aux envir environment data frame allocated. Default globalenv() root_dir character: root directory PIP data version integer quoted directive. \"available\": displays list available versions measure. \"select\"|\"pick\"|\"choose\": allows user select vintage measure. integer negative number (e.g., -1), pip_load_aux load number versions recent version available. , -1 load version current, -2 loads two versions current one, . positive number, must quoted form \"%Y%m%d%H%M%S\". file_to_load character: file path load. work argument apply_label logical: TRUE, predefined labels apply data loaded using file_to_load argument. Default TRUE. Tip: change FALSE main structure data changed labels updated verbose logical: whether display message. Default TRUE preferred_format character: preferred format. default \"fst\".","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_all_aux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load all auxiliary files in memory — pip_load_all_aux","text":"invisible TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":null,"dir":"Reference","previous_headings":"","what":"Load any auxiliary data — pip_load_aux","title":"Load any auxiliary data — pip_load_aux","text":"Load auxiliary data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load any auxiliary data — pip_load_aux","text":"","code":"pip_load_aux(   measure = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   msrdir = paste0(maindir, \"_aux/\", measure, \"/\"),   version = NULL,   file_to_load = NULL,   apply_label = TRUE,   verbose = getOption(\"pipload.verbose\"),   preferred_format = NULL )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load any auxiliary data — pip_load_aux","text":"measure character: Measure used. e.g., \"cpi\" \"ppp\". root_dir character: root directory PIP data msrdir character: measure (CPI) directory. created pip_prices(). version integer quoted directive. \"available\": displays list available versions measure. \"select\"|\"pick\"|\"choose\": allows user select vintage measure. integer negative number (e.g., -1), pip_load_aux load number versions recent version available. , -1 load version current, -2 loads two versions current one, . positive number, must quoted form \"%Y%m%d%H%M%S\". file_to_load character: file path load. work argument apply_label logical: TRUE, predefined labels apply data loaded using file_to_load argument. Default TRUE. Tip: change FALSE main structure data changed labels updated verbose logical: whether display message. Default TRUE preferred_format character: preferred format. default \"fst\".","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_aux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load any auxiliary data — pip_load_aux","text":"","code":"# Load CPI cpi <- pip_load_aux(\"cpi\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_load_aux(\"cpi\"): all the format available are not allowed #> ✖ Only fst, rds, and dta are allowed. Currently directory has formats  # load PPP ppp <- pip_load_aux(\"ppp\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_load_aux(\"ppp\"): all the format available are not allowed #> ✖ Only fst, rds, and dta are allowed. Currently directory has formats  # Load GDP gdp <- pip_load_aux(\"gdp\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_load_aux(\"gdp\"): all the format available are not allowed #> ✖ Only fst, rds, and dta are allowed. Currently directory has formats  measure <- \"cpi\" av      <- pip_load_aux(measure, version = \"available\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_load_aux(measure, version = \"available\"): all the format available are not allowed #> ✖ Only fst, rds, and dta are allowed. Currently directory has formats head(av) #> Error in head(av): object 'av' not found df      <- pip_load_aux(measure, version = av[1]) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_load_aux(measure, version = av[1]): all the format available are not allowed #> ✖ Only fst, rds, and dta are allowed. Currently directory has formats head(df) #>                                                #> 1 function (x, df1, df2, ncp, log = FALSE)     #> 2 {                                            #> 3     if (missing(ncp))                        #> 4         .Call(C_df, x, df1, df2, log)        #> 5     else .Call(C_dnf, x, df1, df2, ncp, log) #> 6 }                                            df      <- pip_load_aux(measure, version = -1) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_load_aux(measure, version = -1): all the format available are not allowed #> ✖ Only fst, rds, and dta are allowed. Currently directory has formats head(df) #>                                                #> 1 function (x, df1, df2, ncp, log = FALSE)     #> 2 {                                            #> 3     if (missing(ncp))                        #> 4         .Call(C_df, x, df1, df2, log)        #> 5     else .Call(C_dnf, x, df1, df2, ncp, log) #> 6 }                                            if (FALSE) { df      <- pip_load_aux(measure, version = \"pick\") }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Load cache data — pip_load_cache","title":"Load cache data — pip_load_cache","text":"Load cache data","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load cache data — pip_load_cache","text":"","code":"pip_load_cache(   country = NULL,   year = NULL,   tool = c(\"PC\", \"TB\"),   survey_acronym = NULL,   data_level = NULL,   welfare_type = NULL,   source = NULL,   cache_id = NULL,   condition = NULL,   type = c(\"dataframe\", \"list\"),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   pipedir = pip_create_globals(root_dir)$PIP_PIPE_DIR,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load cache data — pip_load_cache","text":"country character: vector ISO3 country codes. year numeric: survey year tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added survey_acronym character: Survey acronym data_level character: either \"D1\" national, \"D2\" urban/rural, \"D3\" subnational welfare_type character: Either \"CON\" consumption \"INC\" income source character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. cache_id character: user knows precise cache ID condition character: logical condition applies surveys. example, \"year > 2012\". Make sure condition uses names variables pip_load_inventory(): orig, filename, country_code, year, survey_acronym, vermast, veralt, collection, module, tool, source. used arguments country, year, survey_acronym , vermast, veralt, module tool. type character: Either dataframe list. Defaults dataframe. pipedir charater: directory pipeline. Default pip_create_globals(root_dir)$PIP_PIPE_DIR verbose logical: TRUE, display informative messages. Default TRUE","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load cache data — pip_load_cache","text":"data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load cache data — pip_load_cache","text":"","code":"if (FALSE) { pip_load_cache(\"PRY\", 2017) }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Load cache inventory — pip_load_cache_inventory","title":"Load cache inventory — pip_load_cache_inventory","text":"Load cache inventory","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load cache inventory — pip_load_cache_inventory","text":"","code":"pip_load_cache_inventory(   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   pipedir = pip_create_globals(root_dir)$PIP_PIPE_DIR,   tool = c(\"PC\", \"TB\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load cache inventory — pip_load_cache_inventory","text":"root_dir character: root directory PIP data pipedir charater: directory pipeline. Default pip_create_globals(root_dir)$PIP_PIPE_DIR tool character: Either \"PC\" Poverty calculator \"TB\" table maker","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_cache_inventory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load cache inventory — pip_load_cache_inventory","text":"data frame","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load PIP microdata in different way — pip_load_data","title":"Load PIP microdata in different way — pip_load_data","text":"Load PIP microdata different way","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load PIP microdata in different way — pip_load_data","text":"","code":"pip_load_data(   country = NULL,   year = NULL,   survey_acronym = NULL,   vermast = NULL,   veralt = NULL,   module = NULL,   tool = c(\"PC\", \"TB\"),   source = NULL,   survey_id = NULL,   condition = NULL,   type = \"dataframe\",   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   inv_file = paste0(maindir, \"_inventory/inventory.fst\"),   filter_to_pc = TRUE,   filter_to_tb = FALSE,   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load PIP microdata in different way — pip_load_data","text":"country character: vector ISO3 country codes. year numeric: survey year survey_acronym character: Survey acronym vermast character: Master version form v## ## veralt character: Alternative version form v## ## module character: combination tool source separated hyphen (e.g., PC-GPWG) tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added source character: Source data. GPWG, HIST, GROUP, synth, BIN, . latter used Table Maker. survey_id character: Vector survey IDs like 'HND_2017_EPHPM_V01_M_V01_A_PIP_PC-GPWG' condition character: logical condition applies surveys. example, \"year > 2012\". Make sure condition uses names variables pip_load_inventory(): orig, filename, country_code, year, survey_acronym, vermast, veralt, collection, module, tool, source. used arguments country, year, survey_acronym , vermast, veralt, module tool. type character: Either dataframe list. Defaults dataframe. maindir character: Main directory inv_file character: file path loaded. filter_to_pc logical: TRUE filter recent data included Poverty Calculator. Default FALSE filter_to_tb logical: TRUE filter recent data included Table Maker. Default FALSE verbose logical: whether display message. Default TRUE","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load PIP microdata in different way — pip_load_data","text":"","code":"# ONe year and one country df <- pip_load_data(country = \"PRY\",               year    = 2017) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = country, year = year, survey_acronym = survey_acronym,     vermast = vermast, veralt = veralt, module = module, tool = tool,     source = source, condition = condition, maindir = maindir,     inv_file = inv_file, filter_to_pc = filter_to_pc, filter_to_tb = filter_to_tb): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # specific years for one country df <- pip_load_data(             country = \"PRY\",             year = c(2010, 2012) ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = country, year = year, survey_acronym = survey_acronym,     vermast = vermast, veralt = veralt, module = module, tool = tool,     source = source, condition = condition, maindir = maindir,     inv_file = inv_file, filter_to_pc = filter_to_pc, filter_to_tb = filter_to_tb): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # country FHF does not exist so it will be part of `fail` output (No error) df <- pip_load_data(        country = c(\"ARG\", \"FHF\"),        year = 2010 ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = country, year = year, survey_acronym = survey_acronym,     vermast = vermast, veralt = veralt, module = module, tool = tool,     source = source, condition = condition, maindir = maindir,     inv_file = inv_file, filter_to_pc = filter_to_pc, filter_to_tb = filter_to_tb): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # Load a different module (e.g., GPWG) df <- pip_load_data(country = \"PRY\",              year = 2010,              module = \"PC-GPWG\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = country, year = year, survey_acronym = survey_acronym,     vermast = vermast, veralt = veralt, module = module, tool = tool,     source = source, condition = condition, maindir = maindir,     inv_file = inv_file, filter_to_pc = filter_to_pc, filter_to_tb = filter_to_tb): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # Load different sources df <- pip_load_data(country = \"COL\",              source = \"HIST\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(country = country, year = year, survey_acronym = survey_acronym,     vermast = vermast, veralt = veralt, module = module, tool = tool,     source = source, condition = condition, maindir = maindir,     inv_file = inv_file, filter_to_pc = filter_to_pc, filter_to_tb = filter_to_tb): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  # Load using Survey ID df <- pip_load_data(survey_id = c(\"HND_2017_EPHPM_V01_M_V02_A_PIP_PC-GPWG\",                             \"HND_2018_EPHPM_V01_M_V02_A_PIP_PC-GPWG\")                             ) #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_load_inventory(maindir = maindir): file PIP-Data_QA/_inventory/inventory.fst does not exist #> ℹ Check your connection to the drives # Use condition argument df <- pip_find_data(condition = \"country_code %chin% c('PRY', 'KGZ') &                     (surveyid_year >= 2012 & surveyid_year < 2014)\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in pip_find_data(condition = \"country_code %chin% c('PRY', 'KGZ') &\\n                    (surveyid_year >= 2012 & surveyid_year < 2014)\"): main directory `PIP-Data_QA/` not reachable. #> ℹ Check connection  if (FALSE) { # more than two years for more than one country (only firt year will be used) pip_load_data(        country = c(\"PRY\", \"ARG\"),        year = c(2010, 2012) )  # all countries and years pip_load_data() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Load inventory of welfare aggregate datasets — pip_load_inventory","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"Load inventory welfare aggregate datasets","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"","code":"pip_load_inventory(   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   inv_file = paste0(maindir, \"_inventory/inventory.fst\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"maindir character: main directory. default uses pip_create_globals(root_dir)$PIP_DATA_DIR inv_file character: file path loaded.","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_inventory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load inventory of welfare aggregate datasets — pip_load_inventory","text":"","code":"if (FALSE) { pip_load_inventory() }"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Load PIP pre-calculated data sets — pip_load_results","title":"Load PIP pre-calculated data sets — pip_load_results","text":"Load PIP pre-calculated data sets","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load PIP pre-calculated data sets — pip_load_results","text":"","code":"pip_load_results(   output = NULL,   country = NULL,   year = NULL,   tool = c(\"PC\", \"TB\"),   type = c(\"dataframe\", \"list\"),   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   verbose = getOption(\"pipload.verbose\") )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load PIP pre-calculated data sets — pip_load_results","text":"country character: vector ISO3 country codes. year numeric: survey year tool character: PIP tool data used. PC Poverty Calculator TB Table Maker. Others added type character: Either dataframe list. Defaults dataframe. verbose logical: TRUE, display informative messages. Default TRUE","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_load_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load PIP pre-calculated data sets — pip_load_results","text":"","code":"pip_load_results(\"interpolated_means\") #> ! root_dir is not defined. Directory paths will lack network-drive root #> directory #> Error in fst::read_fst(full_path, as.data.table = TRUE): Error opening fst file for reading, please check access rights and file availability"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"Update PIP microdata inventory — pip_update_inventory","title":"Update PIP microdata inventory — pip_update_inventory","text":"Update PIP microdata inventory","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update PIP microdata inventory — pip_update_inventory","text":"","code":"pip_update_inventory(   country = NULL,   root_dir = Sys.getenv(\"PIP_ROOT_DIR\"),   maindir = pip_create_globals(root_dir)$PIP_DATA_DIR,   force = FALSE,   time = format(Sys.time(), \"%Y%m%d%H%M%S\"),   user = Sys.info()[8] )"},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update PIP microdata inventory — pip_update_inventory","text":"country character: vector ISO3 country code update maindir character: main directory. default uses pip_create_globals(root_dir)$PIP_DATA_DIR force logical: TRUE, forced update implemented time time: time execution saved data signature. Default format(Sys.time(), \"%Y%m%d%H%M%S\") user character: Names UPI user. Default Sys.info()[8]","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/reference/pip_update_inventory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update PIP microdata inventory — pip_update_inventory","text":"","code":"if (FALSE) { pip_update_inventory(\"COL\") }"},{"path":"https://pip-technical-team.github.io/pipload/reference/read_by_format.html","id":null,"dir":"Reference","previous_headings":"","what":"read file dependin on format and convert to data.table — read_by_format","title":"read file dependin on format and convert to data.table — read_by_format","text":"read file dependin format convert data.table","code":""},{"path":"https://pip-technical-team.github.io/pipload/reference/read_by_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read file dependin on format and convert to data.table — read_by_format","text":"","code":"read_by_format(pformat)"},{"path":"https://pip-technical-team.github.io/pipload/reference/read_by_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read file dependin on format and convert to data.table — read_by_format","text":"pformat character: format file.","code":""},{"path":[]},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-018","dir":"Changelog","previous_headings":"","what":"pipload 0.1.8","title":"pipload 0.1.8","text":"fix issue several version pip_find_data","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-017","dir":"Changelog","previous_headings":"","what":"pipload 0.1.7","title":"pipload 0.1.7","text":"implement function pip_load_all_aux()","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-016","dir":"Changelog","previous_headings":"","what":"pipload 0.1.6","title":"pipload 0.1.6","text":"Fix messaging pip_load_results() Add function read_by_format() pip_load_aux()","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-015","dir":"Changelog","previous_headings":"","what":"pipload 0.1.5","title":"pipload 0.1.5","text":"add verbose parameter","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-014","dir":"Changelog","previous_headings":"","what":"pipload 0.1.4","title":"pipload 0.1.4","text":"Improve messages root_dir available Add function add add_gls_to_env() used PIP packages add old povcalnet paths retrieve master file vintages.","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-013","dir":"Changelog","previous_headings":"","what":"pipload 0.1.3","title":"pipload 0.1.3","text":"replace global variables .Renviron, PIP_DATA_ROOT_FOLDER PIP_ROOT_DIR","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-012","dir":"Changelog","previous_headings":"","what":"pipload 0.1.2","title":"pipload 0.1.2","text":"Add function pip_load_results() load results precalculated indicators","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-011","dir":"Changelog","previous_headings":"","what":"pipload 0.1.1","title":"pipload 0.1.1","text":"make sure return survey_id properly pip_find_data() replace directory paths zzz.R objects pip_create_globals()","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-010","dir":"Changelog","previous_headings":"","what":"pipload 0.1.0","title":"pipload 0.1.0","text":"load data pip classes","code":""},{"path":"https://pip-technical-team.github.io/pipload/news/index.html","id":"pipload-001","dir":"Changelog","previous_headings":"","what":"pipload 0.0.1","title":"pipload 0.0.1","text":"Added NEWS.md file track changes package. Added function pip_find_cache() find cache data Added function pip_load_cache() load cache data functions work now tool “PC” “TB”","code":""}]
